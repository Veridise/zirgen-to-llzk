// RUN: zklang -o - %s | FileCheck --enable-var-scope %s

component Foo(v: Val) {
  public bits := for i : 0..8 { NondetReg(Isz(i - v)) };
// CHECK-LABEL: struct.def @Foo<[]> {
//       CHECK:   field @bits : !array.type<8 x !struct.type<@NondetReg<[]>>>
}

component Bar() {
  f := Foo(2);
  f.bits[0]

// CHECK-LABEL: function.def @compute() -> !struct.type<@Bar<[]>> 
// CHECK:     %[[T1:[0-9a-zA-Z_\.]+]] = felt.const  2
// CHECK:     %[[T0:[0-9a-zA-Z_\.]+]] = struct.new : <@Bar<[]>>
// CHECK:     %[[T2:[0-9a-zA-Z_\.]+]] = function.call @Foo::@compute(%[[T1]]) : (!felt.type) -> !struct.type<@Foo<[]>> 
// CHECK:     struct.writef %[[T0]][@f] = %[[T2]] : <@Bar<[]>>, !struct.type<@Foo<[]>>
// CHECK:     %[[T3:[0-9a-zA-Z_\.]+]] = struct.readf %[[T0]][@f] : <@Bar<[]>>, !struct.type<@Foo<[]>>
// CHECK:     %[[T4:[0-9a-zA-Z_\.]+]] = struct.readf %[[T3]][@bits] : <@Foo<[]>>, !array.type<8 x !struct.type<@NondetReg<[]>>>
}
