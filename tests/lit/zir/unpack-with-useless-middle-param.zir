// RUN: zklang -o - %s --print-debug-info=false | FileCheck %s

// COM: This test case has a useless parameter in the middle to make sure 
// COM: the formals and the symbols in the affine map match properly when
// COM: when creating the ConstExpr attribute

component Unpack<N: Val, U: Val, P: Val>(in: Array<Val, N/P>) {
  in[0]
}

// CHECK-LABEL: function.def @compute() -> !struct.type<@User1<[]>> 
component User1() {
// CHECK: %{{[0-9a-zA-Z_\.]+}} = function.call @Unpack::@compute(%{{[0-9a-zA-Z_\.]+}}) : (!array.type<4 x !felt.type>) -> !struct.type<@Unpack<[8, 0, 2, 4]>> 
  Unpack<8,0,2>([0,0,0,0])
// CHECK-LABEL: function.def @constrain(%{{[0-9a-zA-Z_\.]+}}: !struct.type<@User1<[]>>) 
}
