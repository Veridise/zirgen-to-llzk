// RUN: zklang -o - %s --strip-debug-info | FileCheck %s

// COM: Check that we lifted two new parameters
// CHECK-LABEL: struct.def @Unpack<[@N, @P, @M, @Q, 
// CHECK-SAME:     @Aff$0, @Aff$1]> {
component Unpack<N: Val, P: Val, M: Val, Q: Val>(in1: Array<Val, N/P>, in2: Array<Val,M/Q>) {
// COM: Check that each array has a different parameter.
// CHECK: function.def @compute(%arg0: !array.type<@Aff$0 x !felt.type>, %arg1: !array.type<@Aff$1 x !felt.type>) -> !struct.type<@Unpack<[@N, @P, @M, @Q, @Aff$0, @Aff$1]>> 

  in1[0] + in2[0]
}

// CHECK-LABEL: struct.def @User1<[]> {
component User1() {
  // COM: Check that the parameters propagated and folded
  // CHECK: %{{[0-9a-zA-Z_\.]+}} = function.call @Unpack::@compute(%{{[0-9a-zA-Z_\.]+}}, %{{[0-9a-zA-Z_\.]+}}) : (!array.type<4 x !felt.type>, !array.type<4 x !felt.type>) -> !struct.type<@Unpack<[8, 2, 4, 1, 4, 4]>> 
  Unpack<8,2, 4,1>([0,0,0,0], [0,0,0,0])
}
