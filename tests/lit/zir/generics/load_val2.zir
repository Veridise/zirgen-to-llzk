// RUN: zklang -o - %s | FileCheck %s

component A<N: Val>() {
// CHECK-LABEL:   struct.def @A<[@N]> {
// CHECK-LABEL:     function.def @compute() -> !struct.type<@A<[@N]>> 
// CHECK-DAG:       %[[T1:[0-9a-zA-Z_\.]+]] = felt.const  1
// CHECK-DAG:       %[[T2:[0-9a-zA-Z_\.]+]] = struct.new : <@A<[@N]>>
// CHECK-DAG:       %[[T3:[0-9a-zA-Z_\.]+]] = poly.read_const @N : !felt.type
// CHECK-DAG:       %[[T4:[0-9a-zA-Z_\.]+]] = felt.add %[[T3]], %[[T1]] : !felt.type, !felt.type
// CHECK-DAG:       %[[T5:[0-9a-zA-Z_\.]+]] = array.new %[[T3]], %[[T4]] : <2 x !felt.type>
// CHECK-DAG:       struct.writef %[[T2]][@"$super"] = %[[T5]] : <@A<[@N]>>, !array.type<2 x !felt.type>
// CHECK-DAG:       return %[[T2]] : !struct.type<@A<[@N]>>
// CHECK-LABEL:     function.def @constrain
  [N,N+1]
}

component Top() {
  a := A<1>();
}




